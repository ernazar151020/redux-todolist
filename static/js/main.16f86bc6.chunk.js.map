{"version":3,"sources":["components/List.js","action.js","components/Main.js","reduce.js","App.js","index.js"],"names":["connect","state","todos","list","props","ListContent","map","item","index","completed","SingleList","style","textDecoration","background","Text","message","IconContainer","Icon","onClick","dispatch","type","id","Trash","Check","Button","length","styled","div","FaTrashAlt","FaEdit","FiCheckSquare","button","prop","handleSubmit","e","preventDefault","input","target","userInput","value","console","log","Math","random","alert","useState","status","filter","setFilter","useEffect","filterHandler","TodoSections","Container","H1","FormContainer","Form","onSubmit","Input","name","placeholder","ListWrap","section","h1","form","select","option","initial","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f86bc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaTrashAlt, FaEdit } from \"react-icons/fa\";\r\nimport { FiCheckSquare } from \"react-icons/fi\";\r\nimport { deleteTodo, check, clearAll } from \"../action\";\r\nconst List = (props) => {\r\n  return (\r\n    <ListContent>\r\n      {props.todos.map((item, index) => {\r\n        const { completed } = item;\r\n        return (\r\n          <>\r\n            <SingleList\r\n              key={index}\r\n              style={{\r\n                textDecoration: completed ? \"line-through\" : \"none\",\r\n                background: completed ? \"green\" : \"#ffc222\",\r\n              }}\r\n            >\r\n              <Text>{item.message}</Text>\r\n              <IconContainer>\r\n                <Icon onClick={() => props.dispatch(deleteTodo(item.id))}>\r\n                  <Trash />\r\n                </Icon>\r\n\r\n                <Icon onClick={() => props.dispatch(check(item.id))}>\r\n                  <Check />\r\n                </Icon>\r\n              </IconContainer>\r\n            </SingleList>\r\n          </>\r\n        );\r\n      })}\r\n      <Button onClick={() => props.dispatch(clearAll())}>\r\n        {props.todos.length === 0 ? \"\" : \"Clear All\"}\r\n      </Button>\r\n    </ListContent>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { todos: state.list };\r\n  // todos: state.todos.list,\r\n};\r\nexport default connect(mapStateToProps)(List);\r\nconst ListContent = styled.div`\r\n  margin-top: 2rem;\r\n`;\r\nconst SingleList = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: #ffc222;\r\n  padding: 10px;\r\n  margin: 1rem 0;\r\n`;\r\nconst Text = styled.div`\r\n  font-size: 1.3rem;\r\n  white-space: nowrap;\r\n`;\r\nconst Icon = styled.div`\r\n  padding: 0 10px;\r\n  font-size: 1.3rem;\r\n  cursor: pointer;\r\n`;\r\nconst IconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Trash = styled(FaTrashAlt)``;\r\nconst Edit = styled(FaEdit)``;\r\nconst Check = styled(FiCheckSquare)``;\r\nconst Button = styled.button`\r\n  background: #0a0a0a;\r\n  color: #ffffff;\r\n  padding: 10px 30px;\r\n  display: block;\r\n  text-align: center;\r\n  width: 100%;\r\n  outline: none;\r\n  margin: 1rem 0;\r\n  cursor: pointer;\r\n`;\r\n","export const addTodo = (message) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    message,\r\n    id: Math.random(),\r\n    alert: \"\",\r\n  };\r\n};\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: \"DELETE_ITEM\",\r\n    id,\r\n  };\r\n};\r\nexport const check = (id) => {\r\n  return {\r\n    type: \"CHECK\",\r\n    id,\r\n  };\r\n};\r\nexport const clearAll = () => {\r\n  return {\r\n    type: \"CLEAR_ALL\",\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../action\";\r\nimport List from \"./List\";\r\n\r\nconst Main = (prop) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let input = e.target.userInput.value;\r\n    console.log(input);\r\n    prop.dispatch(addTodo(input));\r\n    e.target.userInput.value = \"\";\r\n  };\r\n  const [status, setStatus] = useState(\"\");\r\n  const [filter, setFilter] = useState([]);\r\n  // const statusHandler = (e) => {\r\n  //   console.log(e.target.value);\r\n  //   setStatus(e.target.value);\r\n  // };\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"Completed\":\r\n        setFilter(prop.list.filter((item) => item.completed === true));\r\n        break;\r\n      case \"Uncompleted\":\r\n        setFilter(prop.list.filter((item) => item.completed === false));\r\n        break;\r\n\r\n      default:\r\n        setFilter(prop.list);\r\n        break;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    filterHandler();\r\n  }, []);\r\n\r\n  return (\r\n    <TodoSections>\r\n      <Container>\r\n        <H1>REDUX TO DO LIST</H1>\r\n        <FormContainer>\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Input name=\"userInput\" placeholder=\"Type something...\" />\r\n            {/* <Select onChange={statusHandler}>\r\n              <Option>All</Option>\r\n              <Option>Completed</Option>\r\n              <Option>Uncompleted</Option>\r\n            </Select> */}\r\n            <Button>Submit</Button>\r\n          </Form>\r\n        </FormContainer>\r\n      </Container>\r\n      <ListWrap>\r\n        <List filter={filter} />\r\n      </ListWrap>\r\n    </TodoSections>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { list: state.list };\r\n};\r\nexport default connect(mapStateToProps)(Main);\r\nconst TodoSections = styled.section``;\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 0 15px;\r\n`;\r\nconst H1 = styled.h1`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n`;\r\nconst FormContainer = styled.div`\r\n  background: #ccc;\r\n  padding: 1rem;\r\n  /* max-width: 80vw;\r\n  margin: 0 auto; */\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\nconst Input = styled.input`\r\n  width: 80%;\r\n  padding: 8px 10px;\r\n  font-size: 16px;\r\n`;\r\nconst Select = styled.select`\r\n  padding: 10px 10px;\r\n`;\r\nconst Option = styled.option`\r\n  padding: 10px 10px;\r\n`;\r\nconst Button = styled.button`\r\n  padding: 10px 10px;\r\n  width: 20%;\r\n  margin-left: 10px;\r\n`;\r\nconst ListWrap = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n`;\r\n","const initial = {\r\n  list: [],\r\n};\r\nexport const reducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      console.log(state);\r\n      if (action.message) {\r\n        return {\r\n          ...state,\r\n          list: [\r\n            ...state.list,\r\n            { message: action.message, id: action.id, completed: false },\r\n          ],\r\n        };\r\n      }\r\n\r\n      break;\r\n    case \"DELETE_ITEM\":\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((item) => item.id !== action.id),\r\n      };\r\n    case \"CHECK\":\r\n      return {\r\n        list: state.list.map((item) => {\r\n          return item.id === action.id\r\n            ? { ...item, completed: !item.completed }\r\n            : item;\r\n        }),\r\n      };\r\n    case \"CLEAR_ALL\":\r\n      return { list: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport Main from \"./components/Main\";\nimport { reducer } from \"./reduce\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}